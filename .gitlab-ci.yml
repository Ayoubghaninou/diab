image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.3"
  # https://developer.android.com/studio/ -> Command line tools only
  ANDROID_SDK_TOOLS: "4333796"

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .m2/
    - .gradle/
    - gradle/
    - gradlew


before_script:
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - build
  - test

assemble:
  stage: build
  script:
    - ./gradlew assembleOssDebug

checks:
  stage: test
  script:
  - ./gradlew check -PisCiBuild

weekly:
  only:
  - schedules
  script:
  - echo $KEYSTORE_FILE | base64 -d > gitlab.keystore
  - ./gradlew assembleOssRelease -Pandroid.injected.signing.store.file="$(pwd)/gitlab.keystore" -Pandroid.injected.signing.store.password=$KEY_ALIAS -Pandroid.injected.signing.key.alias=$KEY_PASSWORD -Pandroid.injected.signing.key.password=$KEYSTORE_PASSWORD
  artifacts:
    paths:
    - app/build/outputs/apk/oss/release/app-oss-release.apk
    expire_in: 30 days